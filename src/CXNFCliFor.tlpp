#INCLUDE "PROTHEUS.CH"
#INCLUDE "topconn.ch"
#INCLUDE "rwmake.ch"
#Include "ParmType.ch"
#INCLUDE "CXInclude.ch"

//#############################################################################
//##+----------+------------+-------+-------------------+------+------------+##
//##|Programa  | CXNFCliFor | Autor | Cirilo Rocha      | Data | 30/03/2012 |##
//##+----------+------------+-------+-------------------+------+------------+##
//##|Desc.     | Funcao para determinar se a NF (saida ou entrada) deve ser |##
//##|          | relacionada ao cadastro de cliente ou fornecedor           |##
//##+----------+-----------+------------------------------------------------+##
//##|   DATA   |Programador| Manutencao Efetuada                            |##
//##+----------+-----------+------------------------------------------------+##
//##| 03/09/19 | Cirilo R. | Pequena revisão no fonte                       |##
//##| 27/08/21 | Cirilo R. | Pequena revisão no fonte                       |##
//##|          |           |                                                |##
//##|          |           |                                                |##
//##+----------+-----------+------------------------------------------------+##
//#############################################################################
User Function CXNFCliFor(	lSaida	,;	//01
							cTipoNF	);	//02
								AS Logical

	//Declaracao de variaveis----------------------------------------------------------------------
	Local lCliente		AS Logical
	Local lInverso		AS Logical
	
	//Parametros da rotina-------------------------------------------------------------------------
	ParamType 0		VAR lSaida			AS Logical
	ParamType 1		VAR cTipoNF			AS Character
	
	lInverso	:= (cTipoNF $ 'D*B')
	
	//NF de Saida
	If lSaida
		//Devolucao ou Beneficiamento, usa fornecedor
//		If cTipoNF $ 'D*B'
//			lCliente	:= .F.
//		Else
//			lCliente	:= .T.
//		EndIf
		
		lCliente	:= .Not. lInverso
		
	//NF de Entrada
	Else
		//Devolucao ou Beneficiamento, usa cliente
//		If cTipoNF $ 'D*B'
//			lCliente	:= .T.
//		Else
//			lCliente	:= .F.
//		EndIf
		
		lCliente	:= lInverso
	EndIf                  

Return lCliente
