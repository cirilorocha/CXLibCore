#INCLUDE 'RWMake.ch'
#INCLUDE 'Totvs.ch'
#INCLUDE 'ParmType.ch'
//#INCLUDE 'CXInclude.ch'

//#############################################################################
//##+==========+==========+=======+====================+======+=============+##
//##|Programa  | cGetFile | Autor | Cirilo Rocha       | Data | 13/03/2020  |##
//##+==========+==========+=======+====================+======+=============+##
//##|Descr.    | Função para substituir o cGetFile padrão, de forma tratar  |##
//##|          |  a nova função tFileDialog na release 25                   |##
//##+==========+==========+=================================================+##
//##+ DATA     | ANALISTA | MANUTENÇÃO EFETUADA                             |##
//##+==========+==========+=================================================+##
//##| 05/04/21 | Cirilo R.| Pequena revisão                                 |##
//##| 12/10/21 | Cirilo R.| Pequena revisão (release 33)                    |##
//##| 17/04/22 | Cirilo R.| Adequação para o SmartClient Webapp             |##
//##| 14/12/22 | Cirilo R.| Melhoria para salvar o diretório inicial        |##
//##|          |          |                                                 |##
//##|          |          |                                                 |##
//##|          |          |                                                 |##
//##+==========+==========+=================================================+##
//#############################################################################
User Function cGetFile(	cMascara	,;	//01 cMascara
						cTitulo		,;	//02 cTitulo
						nMascPadrao	,;	//03 nMascPadrao
						cDirInicial	,;	//04 cDirInicial
						lSalvar		,;	//05 lSalvar
						nOpcoes		,;	//06 nOpcoes
						lServer		,;	//07 lServer
						lKeepCase	);	//08 lKeepCase
                            AS Character

	//Declaracao de variaveis----------------------------------------------------------------------
	Local uRet          AS Variant
	Local aMasc			AS Array
	Local nX			AS Numeric
	Local cMascProc		AS Variant
	Local cTemp			AS Character
	Local cSession		AS Character
	Local cDrive		AS Character
	Local cDiretorio	AS Character	
	
	//Parametros da rotina-------------------------------------------------------------------------
    ParamType 0		VAR cMascara		AS Character			Optional Default NIL
    ParamType 1		VAR cTitulo			AS Character			Optional Default NIL
    ParamType 2		VAR nMascPadrao		AS Numeric				Optional Default NIL
    ParamType 3		VAR cDirInicial		AS Character			Optional Default NIL
    ParamType 4		VAR lSalvar			AS Logical				Optional Default NIL
    ParamType 5		VAR nOpcoes			AS Numeric				Optional Default NIL
    ParamType 6		VAR lServer			AS Logical				Optional Default .T.
    ParamType 7		VAR lKeepCase		AS Logical				Optional Default .F.

    //---------------------------------------------------------------------------------------------
	cSession	:= FunName()
	cDiretorio	:= ''
	If ValType(cDirInicial) == 'C'
		cDiretorio	:= cDirInicial
	EndIf
	cDirInicial	:= fwGetProfString(cSession,"CGETFILE",cDiretorio,.T.)

	//---------------------------------------------------------------------------------------------
	If  GetRpoRelease() >= '12.1.027' .And. ;
        .Not. lServer .And. ;
		GetRemoteType() <> 5 .And. ;	//Não pode ser via webapp
        (ValType(nOpcoes) == 'U' .Or. BitAnd(nOpcoes,GETF_NETWORKDRIVE) )
		
        If BitAnd(nOpcoes,GETF_RETDIRECTORY)
            cMascProc   := NIL
            lSalvar     := .F.  //Para diretórios essa função sempre precisa ser Abrir!
        Else
            cMascProc	:= ''
            If ValType(cMascara) == 'C'
                aMasc		:= StrTokArr2(cMascara,'|')
                For nX := 1 to Len(aMasc) Step 2
					If nX <> 1
						cMascProc	+= ' | '
					EndIf
                    If Empty(aMasc[nX])
                        cMascProc   += "Arquivo"
                    Else
                        cMascProc	+= AllTrim(aMasc[nX])
                    EndIf
                    If nX+1 <= Len(aMasc)
						cTemp		:= '('+aMasc[nX+1]+')'
                    Else
                        cTemp		:= '(*.*)'
                    EndIf
					If .Not. ( Right(cMascProc,Len(cTemp)) == cTemp )
						cMascProc	+= ' '+cTemp
					EndIf
                Next
            EndIf
        EndIf

		If Empty(cMascProc)
			cMascProc	:= 'Todos os Arquivos (*.*)'
		EndIf
		
        uRet    := tFileDialog( cMascProc	,;	//01
                                cTitulo		,;	//02
                                nMascPadrao	,;	//03
                                cDirInicial	,;	//04
                                lSalvar		,;	//05
                                nOpcoes	    )	//06

        If .Not. lKeepCase
            uRet    := Lower(uRet)
        EndIf
        If  .Not. Empty(uRet) .And. ;
            BitAnd(nOpcoes,GETF_RETDIRECTORY) .And. ;
            .Not. (Right(uRet,1) $ '\/')
            If GetRemoteType() == 2
                uRet    += '/'
            Else
                uRet    += '\'
            EndIf
        EndIf
    Else
        uRet    := cGetFile(cMascara	,;	//01
                            cTitulo		,;	//02
                            nMascPadrao	,;	//03
                            cDirInicial	,;	//04
                            lSalvar		,;	//05
                            nOpcoes		,;	//06
                            lServer		,;	//07
                            lKeepCase	 )	//08
	EndIf
		
	//Salva o diretório atual que o usuário utilizou-----------------------------------------------
	If .Not. Empty(uRet)
		SplitPath( U_CXSeparaArq(uRet)[1],@cDrive,@cDiretorio,/*@cFile*/,/*@cExt*/ )
		cDirInicial	:= cDrive+cDiretorio
		fwWriteProfString(cSession,"CGETFILE",cDirInicial,.T.) //Guarda o diretório atual
	EndIf

Return uRet
