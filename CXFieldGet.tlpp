#INCLUDE "Protheus.ch"
#INCLUDE "RWMake.ch"
#Include "ParmType.ch"
#INCLUDE "CXInclude.ch"

//#############################################################################
//##+----------+------------+-------+---------------------+------+----------+##
//##|Programa  | CXFieldGet | Autor | Cirilo Rocha        | Data |02/08/2011|##
//##+----------+------------+-------+---------------------+------+----------+##
//##|Descr.    | Função customizada para simplificar o uso da função padrão |##
//##|          | FieldGet.                                                  |##
//##|          |                                                            |##
//##|          | Ao invéz de utilizar FieldGet(FieldPos(cCampo)) pode-se    |##
//##|          | usar apenas U_CXFieldGet(cCampo)                           |##
//##|          |                                                            |##
//##|          | Também recupera campos virtuais, simplificando o uso       |##
//##+----------+-----------+------------------------------------------------+##
//##|   DATA   |Programador| Manutenção efetuada                            |##
//##+----------+-----------+------------------------------------------------+##
//##| 16/02/12 | Cirilo R. | Ajuste para obter a tabela por parâmetro ou com|##
//##|          |           |  base no próprio campo visando simplificar o   |##
//##|          |           |  uso desta função                              |##
//##| 22/02/12 | Cirilo R. | Acrescentado tratamento de erro para os casos  |##
//##|          |           |  do campo não existir no dicionário            |##
//##| 23/02/12 | Cirilo R. | Feito tratamento para campos Memo virtuais     |##
//##|          |           |  (antigos)                                     |##
//##| 22/11/13 | Cirilo R. | Feito tratamento para campos virtuais          |##
//##|          |           | Feito tratamento para campos que não existem   |##
//##| 05/01/18 | Cirilo R. | Otimização geral do fonte                      |##
//##| 03/09/19 | Cirilo R. | Pequena revisão no fonte                       |##
//##| 20/10/21 | Cirilo R. | Pequena revisão no fonte                       |##
//##| 16/03/23 | Cirilo R. | Pequena revisão no fonte                       |##
//##|          |           |                                                |##
//##|          |           |                                                |##
//##|          |           |                                                |##
//##+----------+-----------+------------------------------------------------+##
//#############################################################################
Static aCacheSX3	:= {}							AS Array
Static jCacheSX3	:= JsonObject():New()			AS Json

Static nSX_CAMPO	:= 01		AS Integer
Static nSX_CONTEX	:= 02		AS Integer
Static nSX_TIPO		:= 03		AS Integer
Static nSX_RELACAO	:= 04		AS Integer

Static nSX_TAMARR	:= 04		AS Integer
//-------------------------------------------------------------------------------------------------
User Function CXFieldGet(	cCampo		,;	//01 cCampo
							cAlias		,;	//02 cAlias
							lAliasCpo	,;	//03 lAliasCpo
							lVirtual	 )	//04 lVirtual
	
	//Declaracao de variaveis----------------------------------------------------------------------
	Local nPos			AS Numeric
	Local nPosSX3		AS Numeric
	Local uRet			AS Variant

	//Protege as variáveis públicas
	Private INCLUI	:= .F.	AS Logical
	Private ALTERA	:= .F.	AS Logical
	
	//Parametros da rotina-------------------------------------------------------------------------
	ParamType 0		VAR cCampo				AS Character
	ParamType 1		VAR cAlias				AS Character				Optional Default NIL
	ParamType 2		VAR lAliasCpo			AS Logical					Optional Default .F.
	ParamType 3		VAR lVirtual			AS Logical					Optional Default .F.

	//Inicializa Variaveis-------------------------------------------------------------------------
	cCampo		:= RTrim(Upper(cCampo))

	//Variaveis compartilhadas de mensagens de erro
	cMsgErr		:= IIf(Type('cMsgErr')<>'C','',cMsgErr)
	cCodErr		:= IIf(Type('cCodErr')<>'C','',cCodErr)
	cSoluc		:= IIf(Type('cSoluc')<>'C','',cSoluc)
	cMsg		:= IIf(Type('cMsg')<>'C','',cMsg)
	
	If cAlias == NIL
		If lAliasCpo
			cAlias	:= FwTabPref(cCampo)
		Else
			cAlias	:= Alias()
		EndIf
	EndIf
	
	nPos	:= (cAlias)->(FieldPos(cCampo))
	
	If nPos == 0		//Campo Virtual
		//Otimizacao
		nPosSX3	:= 0
		If jCacheSX3:hasProperty(cCampo)
			nPosSX3	:= jCacheSX3[cCampo]
		EndIf

		If nPosSX3 == 0
			SX3->(dbSetOrder(2)) // X3_CAMPO
			If SX3->(DbSeek(cCampo))
				aAdd(aCacheSX3,Array(nSX_TAMARR))
				nPosSX3	:= len(aCacheSX3)
				aCacheSX3[nPosSX3][nSX_CAMPO]	:= cCampo
				aCacheSX3[nPosSX3][nSX_CONTEX]	:= SX3->(FieldGet(FieldPos('X3_CONTEXT')))
				aCacheSX3[nPosSX3][nSX_TIPO]	:= SX3->(FieldGet(FieldPos('X3_TIPO')))
				aCacheSX3[nPosSX3][nSX_RELACAO]	:= RTrim(SX3->(FieldGet(FieldPos('X3_RELACAO'))))
				
				jCacheSX3[cCampo]	:= nPosSX3	//Salva no cache otimizado
			Else
				U_CXMsgErro('O campo '+cCampo+' não foi localizado no SX3.',;
							'INFORME O SETOR DE T.I.',/*lMsg*/,/*oArea*/,2)
			EndIf
		EndIf
		
		If nPosSX3 > 0
			//Verifica se e' um Memo antigo (virtual)
			If aCacheSX3[nPosSX3][nSX_CONTEX] == 'V' 
				If 	aCacheSX3[nPosSX3][nSX_TIPO] == 'M' .Or. ;
					lVirtual
					If .Not. Empty(aCacheSX3[nPosSX3][nSX_RELACAO])
						dbSelectArea(cAlias)
		//				uRet	:= &(SX3->X3_RELACAO)
//						uRet	:= FwCriaVar(cCampo,.T.)
//						uRet	:= FwInitPad(U_CXFieldGet('X3_RELACAO','SX3'))					
						uRet	:= FwInitPad(aCacheSX3[nPosSX3][nSX_RELACAO])
					EndIf
				Else
					U_CXMsgErro('O campo '+cCampo+' é virtual e não pode ser inicializado.',;
								'INFORME O SETOR DE T.I.',/*lMsg*/,/*oArea*/,2)
				EndIf
			EndIf
		EndIf

	Else
		uRet	:= (cAlias)->(FieldGet(nPos))
	EndIf
	
Return uRet
